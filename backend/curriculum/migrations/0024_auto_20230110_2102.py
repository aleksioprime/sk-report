# Generated by Django 3.2.13 on 2023-01-10 18:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('member', '0011_rename_department_profileteacher_departments'),
        ('curriculum', '0023_auto_20230110_1513'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='inquiryquestionmyp',
            options={'ordering': ['type_inq', 'question'], 'verbose_name': 'Исследовательский вопрос MYP', 'verbose_name_plural': 'Исследовательские вопросы MYP'},
        ),
        migrations.AlterModelOptions(
            name='reflectionmyp',
            options={'ordering': ['planner', 'type_post'], 'verbose_name': 'Пост рефлексии MYP', 'verbose_name_plural': 'Посты рефлексии MYP'},
        ),
        migrations.AlterField(
            model_name='reflectionmyp',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reflection_myp', to='member.profileteacher', verbose_name='Автор поста'),
        ),
        migrations.CreateModel(
            name='UnitPlannerDP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('levels', models.CharField(choices=[('SL', 'Standart Level'), ('HL', 'High Level'), ('SL+HL', 'Standart + High Level')], default='SL+HL', max_length=5, verbose_name='Levels')),
                ('hours', models.PositiveSmallIntegerField(default=0, verbose_name='Hours')),
                ('course_part', models.CharField(max_length=255, verbose_name='Course Part')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('transfer_goals', models.TextField(blank=True, null=True, verbose_name='Transfer goals')),
                ('essen_understand', models.TextField(blank=True, null=True, verbose_name='Essential Understandings')),
                ('misunderstand', models.TextField(blank=True, null=True, verbose_name='Missed concepts/misunderstandings')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Content')),
                ('skills', models.TextField(blank=True, null=True, verbose_name='Skills')),
                ('concepts', models.TextField(blank=True, null=True, verbose_name='Concepts')),
                ('international_mindedness', models.TextField(blank=True, null=True, verbose_name='International Mindedness')),
                ('academic_integrity', models.TextField(blank=True, null=True, verbose_name='Academic Integrity')),
                ('infocom_technology', models.TextField(blank=True, null=True, verbose_name='Information Communication Technology')),
                ('description_atl', models.TextField(blank=True, null=True, verbose_name='Description ATL')),
                ('description_lp', models.TextField(blank=True, null=True, verbose_name='Description Learning Profile')),
                ('formative_assessment', models.TextField(blank=True, null=True, verbose_name='Formative assessment')),
                ('summative_assessment', models.TextField(blank=True, null=True, verbose_name='Summative assessment')),
                ('peer_self_assessment', models.TextField(blank=True, null=True, verbose_name='Peer and self assessment')),
                ('standardization_moderation', models.TextField(blank=True, null=True, verbose_name='Standardization and moderation')),
                ('description_criteria', models.TextField(blank=True, null=True, verbose_name='Description Criteria')),
                ('prior_experiences', models.TextField(blank=True, null=True, verbose_name='Prior learning experience')),
                ('pedagogical_approaches', models.TextField(blank=True, null=True, verbose_name='Pedagogical approaches')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Feedback')),
                ('student_expectations', models.TextField(blank=True, null=True, verbose_name='Student expectations')),
                ('class_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unitplan_dp', to='curriculum.classyear', verbose_name='Grade')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unitplan_dp', to='curriculum.subject', verbose_name='Subject')),
            ],
        ),
        migrations.CreateModel(
            name='ReflectionDP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_post', models.CharField(choices=[('Prior', 'Prior to studying the unit'), ('During', 'During the unit'), ('Worked Well', 'What worked well'), ('Didn’t work well', 'What didn’t work well'), ('Transfer reflection', 'Transfer reflection')], default='Prior', max_length=24, verbose_name='Type')),
                ('post', models.TextField(blank=True, null=True, verbose_name='Post')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reflection_dp', to='member.profileteacher', verbose_name='Author')),
                ('planner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflections', to='curriculum.unitplannerdp', verbose_name='Planner DP')),
            ],
            options={
                'verbose_name': 'Пост рефлексии DP',
                'verbose_name_plural': 'Посты рефлексии DP',
                'ordering': ['planner', 'type_post'],
            },
        ),
        migrations.CreateModel(
            name='InquiryQuestionDP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='Question')),
                ('type_inq', models.CharField(choices=[('Skills-based', 'Skills-based'), ('Content-based', 'Content-based'), ('Debatable', 'Debatable'), ('Concept-based', 'Concept-based')], default='Skills-based', max_length=24, verbose_name='Type')),
                ('planner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquestions', to='curriculum.unitplannerdp', verbose_name='Planner DP')),
            ],
            options={
                'verbose_name': 'Исследовательский вопрос DP',
                'verbose_name_plural': 'Исследовательские вопросы DP',
                'ordering': ['type_inq', 'question'],
            },
        ),
    ]
