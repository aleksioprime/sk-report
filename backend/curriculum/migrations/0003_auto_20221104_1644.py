# Generated by Django 3.2.13 on 2022-11-04 13:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('member', '0008_auto_20221104_1644'),
        ('curriculum', '0002_remove_subject_class_year'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryATL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_eng', models.CharField(max_length=64, verbose_name='Название на англ. языке')),
                ('name_rus', models.CharField(blank=True, max_length=64, null=True, verbose_name='Название на рус. языке')),
            ],
            options={
                'verbose_name': 'ATL Категория ',
                'verbose_name_plural': 'ATL Категории',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ClusterATL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_eng', models.CharField(max_length=64, verbose_name='Название на англ. языке')),
                ('name_rus', models.CharField(blank=True, max_length=64, null=True, verbose_name='Название на рус. языке')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cluster', to='curriculum.categoryatl', verbose_name='Категория ATL')),
            ],
            options={
                'verbose_name': 'ATL Кластер',
                'verbose_name_plural': 'ATL Кластеры',
                'ordering': ['category', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Criterion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(choices=[('A', 'Критерий A'), ('B', 'Критерий B'), ('C', 'Критерий C'), ('D', 'Критерий D')], max_length=1)),
                ('name_eng', models.CharField(max_length=255, verbose_name='Название на англ. языке')),
                ('name_rus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('description_eng', models.TextField(blank=True, null=True, verbose_name='Описание на англ. языке')),
                ('description_rus', models.TextField(blank=True, null=True, verbose_name='Описание на рус. языке')),
                ('subject_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='criterion', to='curriculum.subjectgroupib', verbose_name='Предметная группа')),
            ],
            options={
                'verbose_name': 'Критерий оценивания',
                'verbose_name_plural': 'Критерии оценивания',
                'ordering': ['subject_group', 'letter'],
            },
        ),
        migrations.CreateModel(
            name='ExplorationToDevelop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_eng', models.CharField(max_length=64, verbose_name='Название на англ. языке')),
                ('name_rus', models.CharField(blank=True, max_length=64, null=True, verbose_name='Название на рус. языке')),
            ],
            options={
                'verbose_name': 'Линия исследования',
                'verbose_name_plural': 'Линии исследований',
                'ordering': ['gcontext', 'name_eng'],
            },
        ),
        migrations.CreateModel(
            name='GlobalContext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_eng', models.CharField(max_length=64, verbose_name='Название на англ. языке')),
                ('name_rus', models.CharField(blank=True, max_length=64, null=True, verbose_name='Название на рус. языке')),
                ('description_eng', models.TextField(blank=True, null=True, verbose_name='Описание на англ. языке')),
                ('description_rus', models.TextField(blank=True, null=True, verbose_name='Описание на рус. языке')),
                ('focus_questions_eng', models.CharField(blank=True, max_length=255, null=True, verbose_name='Вопросы на англ. языке')),
                ('focus_questions_rus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Вопросы на рус. языке')),
            ],
            options={
                'verbose_name': 'Глобальный контекст',
                'verbose_name_plural': 'Глобальные контексты',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='IndicatorATL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_eng', models.CharField(max_length=255, verbose_name='Название на англ. языке')),
                ('name_rus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('group_eng', models.CharField(blank=True, max_length=255, null=True, verbose_name='Группа на англ. языке')),
                ('group_rus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Группа на рус. языке')),
            ],
            options={
                'verbose_name': 'ATL Индикатор',
                'verbose_name_plural': 'ATL Индикаторы',
                'ordering': ['subcluster', 'name_eng'],
            },
        ),
        migrations.CreateModel(
            name='KeyConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_eng', models.CharField(max_length=32, verbose_name='Название на англ. языке')),
                ('name_rus', models.CharField(blank=True, max_length=32, null=True, verbose_name='Название на рус. языке')),
                ('description_eng', models.TextField(blank=True, null=True, verbose_name='Описание на англ. языке')),
                ('description_rus', models.TextField(blank=True, null=True, verbose_name='Описание на рус. языке')),
            ],
            options={
                'verbose_name': 'Ключевой концепт',
                'verbose_name_plural': 'Ключевые концепты',
                'ordering': ['name_eng'],
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_eng', models.CharField(max_length=255, null=True, verbose_name='Название на англ. языке')),
                ('name_rus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('years', models.ManyToManyField(blank=True, related_name='level', to='curriculum.ClassYear', verbose_name='Года обучения')),
            ],
            options={
                'verbose_name': 'Образовательный уровень',
                'verbose_name_plural': 'Образовательные уровни',
                'ordering': ['name_eng'],
            },
        ),
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_eng', models.CharField(max_length=255, null=True, verbose_name='Описание на англ. языке')),
                ('name_rus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание на рус. языке')),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='objective', to='curriculum.level', verbose_name='Уровень в IB')),
            ],
            options={
                'verbose_name': 'Образовательная цель',
                'verbose_name_plural': 'Образовательные цели',
                'ordering': ['level', 'strand'],
            },
        ),
        migrations.CreateModel(
            name='RelatedConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_eng', models.CharField(max_length=64, verbose_name='Название на англ. языке')),
                ('name_rus', models.CharField(blank=True, max_length=64, null=True, verbose_name='Название на рус. языке')),
                ('description_eng', models.TextField(blank=True, null=True, verbose_name='Описание на англ. языке')),
                ('description_rus', models.TextField(blank=True, null=True, verbose_name='Описание на рус. языке')),
            ],
            options={
                'verbose_name': 'Сопутствующий концепт',
                'verbose_name_plural': 'Сопутствующие концепты',
                'ordering': ['name_eng'],
            },
        ),
        migrations.CreateModel(
            name='UnitPlannerMYP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(default=1, verbose_name='Порядковый номер планера')),
                ('title', models.CharField(max_length=255, verbose_name='Название юнита')),
                ('hours', models.PositiveSmallIntegerField(default=0, verbose_name='Кол-во учебных часов')),
                ('concept_understand', models.CharField(blank=True, max_length=255, null=True, verbose_name='Концептуальное понимание')),
                ('statement_inquiry', models.CharField(blank=True, max_length=255, null=True, verbose_name='Исследовательский запрос')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Содержание юнита')),
                ('skills', models.TextField(blank=True, null=True, verbose_name='Предметные навыки')),
                ('description_atl', models.TextField(blank=True, null=True, verbose_name='Описание развития ATL')),
                ('learner_profile', models.TextField(blank=True, null=True, verbose_name='Развитие профиля студента')),
                ('inter_mindedness', models.TextField(blank=True, null=True, verbose_name='Межкультурное понимание')),
                ('language_development', models.TextField(blank=True, null=True, verbose_name='Языковое развитие')),
                ('info_technology', models.TextField(blank=True, null=True, verbose_name='Использование средств ИКТ')),
                ('service_action', models.TextField(blank=True, null=True, verbose_name='Служение обществу')),
                ('form_assessment', models.TextField(blank=True, null=True, verbose_name='Формирующее оценивание')),
                ('sum_assessment_task', models.TextField(blank=True, null=True, verbose_name='Итоговое оценивание (задачи)')),
                ('sum_assessment_soi', models.TextField(blank=True, null=True, verbose_name='Итоговое оценивание (взаимосвязь с SOI)')),
                ('ps_assessment', models.TextField(blank=True, null=True, verbose_name='Взаимная оценка одноклассников и самооценка')),
                ('prior_experiences', models.TextField(blank=True, null=True, verbose_name='Предыдущий учебный опыт студентов')),
                ('learning_experiences', models.TextField(blank=True, null=True, verbose_name='Опыт обучения')),
                ('teaching_strategies', models.TextField(blank=True, null=True, verbose_name='Стратегии преподавания')),
                ('student_expectations', models.TextField(blank=True, null=True, verbose_name='Ожидания от студентов')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Поддержка обратной связи со студентами')),
                ('differentiation', models.TextField(blank=True, null=True, verbose_name='Применение дифференцированного подхода')),
                ('atl_skills', models.ManyToManyField(blank=True, related_name='unitplan_myp', to='curriculum.IndicatorATL', verbose_name='Навыки ATL')),
                ('authors', models.ManyToManyField(related_name='unitplan_myp', to='member.ProfileTeacher', verbose_name='Авторы')),
                ('class_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unitplan_myp', to='curriculum.classyear', verbose_name='Год обучения')),
                ('criteria', models.ManyToManyField(blank=True, related_name='unitplan_myp', to='curriculum.Criterion', verbose_name='Критерии оценки')),
                ('explorations', models.ManyToManyField(blank=True, related_name='unitplan_myp', to='curriculum.ExplorationToDevelop', verbose_name='Линии исследования')),
                ('global_context', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unitplan_myp', to='curriculum.globalcontext', verbose_name='Глобальный контекст')),
                ('key_concepts', models.ManyToManyField(blank=True, related_name='unitplan_myp', to='curriculum.KeyConcept', verbose_name='Ключевые концепты')),
                ('objectives', models.ManyToManyField(blank=True, related_name='unitplan_myp', to='curriculum.Objective', verbose_name='Образовательные цели')),
                ('related_concepts', models.ManyToManyField(blank=True, related_name='unitplan_myp', to='curriculum.RelatedConcept', verbose_name='Сопутствующие концепты')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unitplan_myp', to='curriculum.subject', verbose_name='Учебный предмет')),
            ],
            options={
                'verbose_name': 'ЮнитПланер MYP',
                'verbose_name_plural': 'ЮнитПланеры MYP',
                'ordering': ['class_year', 'subject', 'number', 'title'],
            },
        ),
        migrations.CreateModel(
            name='SubjectDirection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_eng', models.CharField(max_length=128, verbose_name='Название на англ. языке')),
                ('name_rus', models.CharField(blank=True, max_length=128, null=True, verbose_name='Название на рус. языке')),
                ('subject_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subdirection', to='curriculum.subjectgroupib', verbose_name='Предметная группа')),
            ],
            options={
                'verbose_name': 'Предметное направление',
                'verbose_name_plural': 'Предметные направления',
                'ordering': ['subject_group', 'name_eng'],
            },
        ),
        migrations.CreateModel(
            name='SubClusterATL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_eng', models.CharField(max_length=255, verbose_name='Название на англ. языке')),
                ('name_rus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('question_eng', models.CharField(blank=True, max_length=255, null=True, verbose_name='Вопрос на англ. языке')),
                ('question_rus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Вопрос на рус. языке')),
                ('cluster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcluster', to='curriculum.clusteratl', verbose_name='Кластер ATL')),
            ],
            options={
                'verbose_name': 'ATL Подкластер',
                'verbose_name_plural': 'ATL Подкластеры',
                'ordering': ['cluster', 'name_eng'],
            },
        ),
        migrations.CreateModel(
            name='Strand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(default=1, verbose_name='Абсолютный номер')),
                ('letter', models.PositiveIntegerField(choices=[(1, 'i'), (2, 'ii'), (3, 'iii'), (4, 'iv'), (5, 'v')], default=1, verbose_name='Метка в критерии')),
                ('name_eng', models.CharField(max_length=255, verbose_name='Название на англ. языке')),
                ('name_rus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название на рус. языке')),
                ('criterion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='strand', to='curriculum.criterion', verbose_name='Критерий')),
            ],
            options={
                'verbose_name': 'Стрэнд',
                'verbose_name_plural': 'Стрэнды',
                'ordering': ['criterion', 'number', 'letter'],
            },
        ),
        migrations.AddField(
            model_name='relatedconcept',
            name='subdirections',
            field=models.ManyToManyField(blank=True, related_name='related_concept', to='curriculum.SubjectDirection', verbose_name='Предметное направление'),
        ),
        migrations.CreateModel(
            name='Reflection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_post', models.CharField(choices=[('Prior', 'Перед началом юнита'), ('During', 'Во время юнита'), ('After', 'После окончания юнита')], default='After', max_length=6, verbose_name='Тип рефлексии')),
                ('post', models.TextField(blank=True, null=True, verbose_name='Содержание рефлексии')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reflection', to='member.profileteacher', verbose_name='Автор поста')),
                ('planner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflections', to='curriculum.unitplannermyp', verbose_name='Планнер MYP')),
            ],
            options={
                'verbose_name': 'Пост рефлексии',
                'verbose_name_plural': 'Посты рефлексии',
                'ordering': ['planner', 'type_post'],
            },
        ),
        migrations.CreateModel(
            name='RecommendSubjectKC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_eng', models.TextField(blank=True, null=True, verbose_name='Комментарии на англ. языке')),
                ('comment_rus', models.TextField(blank=True, null=True, verbose_name='Комментарии на рус. языке')),
                ('key_concept', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recomend_subject', to='curriculum.keyconcept', verbose_name='Ключевой концепт')),
                ('subject_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recomend_subject', to='curriculum.subjectgroupib', verbose_name='Предметная группа')),
            ],
            options={
                'verbose_name': 'Рекомендуемый предмет',
                'verbose_name_plural': 'Рекомендуемые предметы',
                'ordering': ['subject_group', 'key_concept'],
            },
        ),
        migrations.AddField(
            model_name='objective',
            name='strand',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='objective', to='curriculum.strand', verbose_name='Стрэнд'),
        ),
        migrations.AddField(
            model_name='keyconcept',
            name='recommended_subjects',
            field=models.ManyToManyField(blank=True, related_name='key_concept', through='curriculum.RecommendSubjectKC', to='curriculum.SubjectGroupIB', verbose_name='Рекомендуемые предметные группы'),
        ),
        migrations.CreateModel(
            name='InquiryQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='Исследовательский вопрос')),
                ('type_inq', models.CharField(choices=[('Factual', 'Фактический'), ('Conceptual', 'Концептуальный'), ('Debatable', 'Дискуссионный')], default='Factual', max_length=12, verbose_name='Тип вопроса')),
                ('line', models.CharField(blank=True, max_length=255, null=True, verbose_name='Линия исследования')),
                ('planner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquestions', to='curriculum.unitplannermyp', verbose_name='Планнер MYP')),
            ],
            options={
                'verbose_name': 'Исследовательский вопрос',
                'verbose_name_plural': 'Исследовательские вопросы',
                'ordering': ['type_inq', 'question'],
            },
        ),
        migrations.AddField(
            model_name='indicatoratl',
            name='subcluster',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='indicator', to='curriculum.subclusteratl', verbose_name='Подкластер ATL'),
        ),
        migrations.AddField(
            model_name='explorationtodevelop',
            name='gcontext',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exploration', to='curriculum.globalcontext', verbose_name='Глобальный контекст'),
        ),
        migrations.CreateModel(
            name='AchievementLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_eng', models.TextField(null=True, verbose_name='Описание на англ. языке')),
                ('name_rus', models.TextField(blank=True, null=True, verbose_name='Описание на рус. языке')),
                ('point', models.PositiveIntegerField(default=0, verbose_name='Баллы')),
                ('objective', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='achievelevel', to='curriculum.objective', verbose_name='Образовательная цель')),
            ],
            options={
                'verbose_name': 'Уровень достижений',
                'verbose_name_plural': 'Уровни достижений',
                'ordering': ['objective', 'point'],
            },
        ),
    ]
